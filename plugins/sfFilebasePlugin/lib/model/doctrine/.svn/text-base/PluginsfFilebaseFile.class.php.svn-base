<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginsfFilebaseFile extends BasesfFilebaseFile
{
  public function preDelete($event)
  {
    $f = sfFilebasePlugin::getInstance();
    $f[$this->getPathname()]->delete();
  }

  public function preSave($event)
  {
    parent::preSave($event);
    
    if(!$this->isNew())
    {
      $f = sfFilebasePlugin::getInstance();

      if($this->original_path !== false)
      {
        $dir_object = Doctrine_Query::create()->
            select('*')->
            from('sfFilebaseDirectory d')->
            where('CONCAT(d.path, \'/\', d.filename)=?')->
            execute(array($this->getPath()))->get(0);

        $source_file_name = $this->original_filename === false ? $this->getFilename() : $this->original_filename;

        $new_pathname = $f->moveFile(
          $this->original_path . '/' . $source_file_name,
          $this->getPath() . '/' . $source_file_name
        );
        $this->setParentDirectory($dir_object);
        $this->setHash($new_pathname->getHash());
        $this->original_path = false;
      }

      if($this->original_filename !== false)
      {
        $old_pathname = $f[$this->getPath() . '/' . $this->original_filename];
        $new_pathname = $old_pathname->rename($this->getFilename());
        $this->setHash($new_pathname->getHash());
        $this->original_filename = false;
      }
    }
  }
}