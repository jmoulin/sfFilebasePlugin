<?php

/**
 * BasesfAbstractFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $path
 * @property string $filename
 * @property string $hash
 * @property string $comment
 * @property integer $sf_filebase_directories_id
 * @property string $type
 * @property integer $level
 * @property sfFilebaseDirectory $ParentDirectory
 * @property Doctrine_Collection $tags
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BasesfAbstractFile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_abstract_files');
        $this->hasColumn('path', 'string', 255, array('type' => 'string', 'notnull' => true, 'length' => '255'));
        $this->hasColumn('filename', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('hash', 'string', 255, array('type' => 'string', 'notnull' => true, 'length' => '255'));
        $this->hasColumn('comment', 'string', null, array('type' => 'string'));
        $this->hasColumn('sf_filebase_directories_id', 'integer', null, array('type' => 'integer'));
        $this->hasColumn('type', 'string', 255, array('type' => 'string', 'length' => 255));
        $this->hasColumn('level', 'integer', null, array('type' => 'integer'));


        $this->index('u1', array('type' => 'unique', 'fields' => array(0 => 'hash')));
        $this->setSubClasses(array('sfFilebaseFile' => array('type' => '1'), 'sfFilebaseDirectory' => array('type' => '2')));
    }

    public function setUp()
    {
        $this->hasOne('sfFilebaseDirectory as ParentDirectory', array('local' => 'sf_filebase_directories_id',
                                                                      'foreign' => 'id',
                                                                      'onDelete' => 'cascade',
                                                                      'onUpdate' => 'cascade'));

        $this->hasMany('sfFilebaseTag as tags', array('local' => 'id',
                                                      'foreign' => 'sf_abstract_files_id'));
    }
}